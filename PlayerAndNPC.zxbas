#include "DrawPlayer.zxbas"
#include "Levels.zxbas"
#include "Environment.zxbas"
#include <winscroll.bas>

dim playerMove as ubyte = 0
dim playerDirection as ubyte = directionRS
dim playerX as ubyte = 0
dim playerY as ubyte = 0
dim playerFrame as ubyte = 1
dim playerStairsDelay as ubyte = 0
dim playerLives as ubyte 
dim playerShield as ubyte
dim playerDead as ubyte
dim playerColor as ubyte
dim playerFrags as ubyte
dim playerDifficulty as ubyte = 0
dim playerAmmo as ubyte
dim playerGrenade as ubyte

dim GrenadeX as ubyte
dim GrenadeY as ubyte
dim GrenadeDirection as ubyte = 0
dim GrenadeActive as ubyte = 0
dim GrenadeDistance as ubyte = 0

dim npcX(5) as ubyte
dim npcY(5) as ubyte
dim npcLocation(5) as ubyte
dim npcLive(5) as ubyte
dim npcFrame(5) as ubyte
dim npcHP(5) as ubyte
dim npcAction(5) as ubyte

dim clearAch as ubyte = 0

dim mapNumber as ubyte = 0

function CountLiveAliens() as ubyte
    itemp=0
    dim e as ubyte
    for e=0 to 5
        if npcHP(e)>0 then itemp=itemp+1
    next 
    return itemp
end function

function GetChar(x as ubyte, y as ubyte) as ubyte
	if x>31 then return 10
	if y>20 then return 10
	return GetChar1(x,y)
end function

sub RedrawArea(x as ubyte, y as ubyte) 
	RedrawArea1(x,y)
end sub

sub SetDifficulty(difficulty as ubyte)
	playerDifficulty = difficulty
	achBB = 0
	achSFS = 0
	achFB = 0
end sub

function CanHit(x1 as ubyte, y1 as ubyte, x2 as ubyte) as ubyte
	return CanHit1(x1, y1, x2)
end function

sub RespawnPlayer()
	RedrawArea1(playerX, playerY)
	RedrawArea1(playerX + 1, playerY)
	RedrawArea1(playerX - 1, playerY)
	RedrawArea1(playerX, playerY + 1)
	RedrawArea1(playerX + 1, playerY + 1)
	RedrawArea1(playerX - 1, playerY + 1)
	
	playerMove = 0
	playerDead = 0	
	playerShield = 10
	dim i as ubyte
	DrawPlayer(playerDirection,playerFrame,playerX,playerY,7)
	DrawUI1(playerLives, playerAmmo, playerGrenade, playerShield, playerFrags, mapNumber)
end sub

sub ResetNPCs()
	dim i as ubyte = 0
	for i = 0 to 5
		npcX(i) = 0
		npcY(i) = 0
		npcLive(i) = 0
		npcFrame(i) = 0
		npcHP(i) = 0
	next i
end sub

sub InitNPC(x as ubyte, y as ubyte, index as ubyte)
	npcAction(index) = AlienActionEmpty
	npcLocation(index) = AlienLocationDown
	npcX(index) = x
	npcY(index) = y
	npcLive(index) = 1
	npcFrame(index) = 1
	npcHP(index) = playerDifficulty
end sub

sub RestartLevel()
	DrawLevel(mapNumber)
end sub 

sub DrawLevel(mapNum as ubyte)
	CLS
	mapNumber = mapNum
	ResetNPCs()

    DrawLevel1(mapNumber)
	
	dim x1 as ubyte
	dim y1 as ubyte
	dim i as ubyte
	i=0
	dim tempdir as ubyte
	for x1=0 to 31
		for y1=0 to 20	
			tempdir=map(y1,x1)				
			if tempdir=98 then 	
				InitNPC(x1,y1,i)
				i=i+1
				map(y1,x1)=0
			end if 
			if tempdir=97 then
				tempdir=rnd*2
				playerX=x1
				playerY=y1
				playerDirection=tempdir+2
				map(y1,x1)=0
			end if 
			RedrawArea1(x1,y1)	
		next
	next

    DrawUI1(playerLives, playerAmmo, playerGrenade, playerShield, playerFrags, mapNumber)
	RefreshNPCs()
end sub

sub ClearStatusLine()
	paper 0
	for i=0 to 31
		print at 21,i; " "
	next
end sub

sub RefreshAchievements()
	if clearAch = 100 or achSFS = 1 or achBB = 1 or achFB = 1 then
		ClearStatusLine()
		clearAch = 0
	end if		
	ink 6
	flash 1
	if achTL = 1 then achTL = 2: clearAch = 1: goto achfinished2
	if achSFS = 1 then			
		printat64(21,21): print64(" STRIKE FROM THE SKY! ")
		achSFS = 2
		goto achrefresh
	end if
	if achFB = 1 then			
		printat64(21,25): print64(" FIRST BLOOD! ")
		achFB = 2
		goto achrefresh
	end if
	if achBB = 1 then
		printat64(21,26): print64("  EAT THIS! ")
		achBB = 2
		goto achrefresh
	end if
	ink 3
	bright 1
	
	bright 0
	if clearAch >= 1 then clearAch = clearAch + 1: goto achfinished2		
	:achfinished
	goto achfinished2
	:achrefresh
	flash 0 
	clearAch = 1
	Shock()
	DrawUI1(playerLives, playerAmmo, playerGrenade, playerShield, playerFrags, mapNumber)
	:achfinished2
end sub

sub PlayerOrNPCAction(x as ubyte, y as ubyte, direction as ubyte, action as ubyte, move as ubyte, frame as ubyte, color as ubyte, index as ubyte)
	'Achievements
	if index = 0 then
		RefreshAchievements()
		flash 0
	end if
	
	
	flash 0
	paper 0
	
	dim i as ubyte
	dim fall as ubyte = 0 
	if index = 0 then 
		fall = CanFall(x,y,1)	
	end if 
	if fall = 1 then
		ClearBeforeDeathInLava(x,y,1)
		y = y + 1		
		if index = 0 then
			for i = 0 to 5
				if npcLive(i) = 1 then
					if npcX(i) = x and npcY(i) = y+2 then
						npcHP(i) = 0
						npcFrame(i) = 5
						if achSFS = 0 then achSFS = 1: playerFrags=playerFrags+1
						exit for
					end if
				end if
			next i
		end if
	end if
		
	if move = 1 and frame = 5 and direction <> directionLF and direction <> directionRF then move = 0

	if move = 0 and frame = 1 then
		dim canMove as ubyte = 1
		dim shiftindex as ubyte=0
		if index=0 then 
			shiftindex=9
		else
			shiftindex=index-1
		end if 
		if action = actionR then
			direction = directionRS
			if CanMoveRight(x,y) = 1 then
				for i = 0 to 5
					if i<>shiftindex then 
						if npcLive(i) = 1 then
							if npcX(i) = x + 2 and npcY(i) = y then
								canMove = 0
								exit for
							end if
						end if
					end if 
				next i
				if canMove = 1 then
					move = 1
					direction = directionR
				end if
			end if
		end if
		if action = actionL then
			direction = directionLS
			if CanMoveLeft(x,y) = 1 then
				for i = 0 to 5
					if i<>shiftindex then 
						if npcLive(i) = 1 then
							if npcX(i) = x - 2 and npcY(i) = y then
								canMove = 0
								exit for
							end if
						end if
					end if
				next i
				if canMove = 1 then
					move = 1
					direction = directionL
				end if
			end if
		end if
	end if

	if direction = directionR or direction = directionL or direction = directionRF or direction = directionLF then
	   DrawPlayer(direction,frame,x,y,color)
	else
		if direction <> directionRX and direction <> directionLX then
			DrawPlayer(direction,1,x,y,color)
		end if
	end if


	if move = 0 then
		if direction = directionR then x = x + 1
		if direction = directionL then x = x - 1

		if direction = directionR then direction = directionRS
		if direction = directionL then direction = directionLS

		if action = actionD and (direction = directionRS or direction = directionR or direction = directionRF) then direction = directionRD
		if action = actionD and (direction = directionLS or direction = directionL or direction = directionLF) then direction = directionLD
		if action = actionU and direction = directionRD then direction = directionRS
		if action = actionU and direction = directionLD then direction = directionLS
		dim redraw as ubyte = 0
		'Stairs
		if action = actionU and CanMoveUpDown(x,y+1) = 1 and index = 0 then
			playerStairsDelay = playerStairsDelay + 1
			if playerStairsDelay = 1 or playerStairsDelay = 2 then
				if direction = directionRS or direction = directionRS2 then direction = directionRS1
				if direction = directionLS or direction = directionLS2 then direction = directionLS1
				redraw = 1: goto finish0
			end if
			if playerStairsDelay = 3 then
				if direction = directionRS or direction = directionRS1 then direction = directionRS2
				if direction = directionLS or direction = directionLS1 then direction = directionLS2
				redraw = 1: goto finish0
			end if
			if playerStairsDelay = 4 then
				playerStairsDelay = 0
				RedrawArea1(x,y + 1)
				RedrawArea1(x + 1,y + 1)
				y = y - 1
				if direction = directionRS or direction = directionRS1 then direction = directionRS2
				if direction = directionLS or direction = directionLS1 then direction = directionLS2
				redraw = 1: goto finish0
			end if
		end if
		if action = actionU and CanMoveUpDown(x,y+1) = 0 and index = 0 then
			if direction = directionRS1 or direction = directionRS2 then direction = directionRS
			if direction = directionLS1 or direction = directionLS2 then direction = directionLS
			redraw = 1: goto finish0
		end if
		if action = actionD and index = 0 and (direction = directionRD or direction = directionLD or direction = directionRS1 or direction = directionRS2 or direction = directionLS1 or direction  = directionLS2) and CanMoveUpDown(x,y +2) = 1 then
			playerStairsDelay = playerStairsDelay + 1
			if playerStairsDelay = 1 or playerStairsDelay = 2 then
				if direction = directionRS or direction = directionRD or direction = directionRS2 then direction = directionRS1
				if direction = directionLS or direction = directionLD or direction = directionLS2 then direction = directionLS1
				redraw = 1: goto finish0
			end if
			if playerStairsDelay = 3 then
				if direction = directionRS or direction = directionRS1 then direction = directionRS2
				if direction = directionLS or direction = directionLS1 then direction = directionLS2
				redraw = 1: goto finish0
			end if
			if playerStairsDelay = 4 then
				playerStairsDelay = 0
				RedrawArea1(x,y)
				y = y + 1
				if direction = directionRS or direction = directionRS1 then direction = directionRS2
				if direction = directionLS or direction = directionRS1 then direction = directionLS2
				redraw = 1: goto finish0
			end if
		end if
		if action = actionD and CanMoveUpDown(x,y +2) = 0 and index = 0 then
			if direction = directionRS1 or direction = directionRS2 then direction = directionRD
			if direction = directionLS1 or direction = directionLS2 then direction = directionLD
			redraw = 1: goto finish0
		end if
		
		finish0:
		if redraw = 1 then 
			DrawPlayer(direction,frame,x,y,color)
			goto finish
		end if 
		
		dim nhp as ubyte
		dim nx as ubyte
		dim ny as ubyte
		dim hit as ubyte 
		dim ndir as ubyte
		if direction<>directionRF and direction<>directionLF then
			if action = actionF and Grenades=0 then
				if (direction = directionRS or direction = directionR or direction = directionRD or direction = directionRW) then
					if CanMoveRight(x,y) = 1 and playerAmmo > 0 then
						frame = 1
						move = 1
						playerAmmo = playerAmmo - 1
						direction = directionRF
						DrawPlayer(direction,frame,x,y,color)
						ShotSound()
						CheckHitAlien(directionR)
					end if
				end if
				if (direction = directionLS or direction = directionL or direction = directionLD or direction = directionLW) then
					if CanMoveLeft(x,y) = 1 and playerAmmo > 0 then
						move = 1
						frame = 1
						playerAmmo = playerAmmo - 1
						direction = directionLF
						DrawPlayer(direction,frame,x,y,color)
						ShotSound()	
						CheckHitAlien(directionL)
					end if
				end if				
			end if 
			if action = actionF and Grenades=1 and GrenadeActive=0 and playerGrenade>0 then
				if direction = directionRS or direction = directionRD then
					GrenadeX=playerX*8+8
					GrenadeY=192-playerY*8-8
					GrenadeDirection=directionR
				end if 
				if direction = directionLS or direction = directionLD then
					GrenadeX=playerX*8-2
					GrenadeY=192-playerY*8-8
					GrenadeDirection=directionL
				end if 
				GrenadeActive=1
				playerGrenade=playerGrenade-1
				GrenadeDistance=0
			end if 
			if action = actionF then RefreshUI(0)
		end if 	
	end if
	
	if direction = directionRX then
		if x = 0 then x = 1
		if x>30 then x=30
		if frame<5 then
			itemp=map(y+1,x+1)
			if itemp=11 or itemp=10 or itemp=99 then x=x-1
			if itemp=11 or itemp=10 then x=x-1
			if map(y+1,x) = 11 then x=x+1
		end if 
		DrawPlayer(directionRX,frame,x,y,color)
		if playerShield>0 then DrawPlayer(playerDirection,playerFrame,playerX,playerY,7)
		if fall = 0 then
			if frame = 5 then
				map(y + 1,x) = 12: map(y + 1,x + 1) = 13
				RefreshNPCs()
			end if	
		end if 		
		if frame = 5 and index = 0 then playerDead = 1		
	end if
	if direction = directionLX then
		if x>30 then x=30		
		if frame<5 then
			itemp=map(y+1,x)
			if itemp=11 or itemp=10 or itemp=99 then x=x+1
			if itemp=11 or itemp=10 then x=x+1
			if map(y + 1,x + 1) = 11 then x=x-1		
		end if 
		DrawPlayer(directionLX,frame,x,y,color)
		if playerShield>0 then DrawPlayer(playerDirection,playerFrame,playerX,playerY,7)
		if fall = 0 then
			if frame = 5 then
				map(y + 1,x) = 14: map(y + 1,x + 1) = 15
				RefreshNPCs()
			end if
		end if 
		if frame = 5 and index = 0 then playerDead = 1
	end if

	if frame = 4 then
	  if direction = directionLF then direction = directionLS
	  if direction = directionRF then direction = directionRS
	end if
:finish

	if index = 0 then
		playerMove = move
		playerDirection = direction
		playerX = x
		playerY = y
		playerFrame = frame
	end if

	if index = 0 then
		dim takenItem as ubyte
		takenItem = PlayerTookItem1(playerX,playerY + 1)
		if takenItem = 0 then
			takenItem = PlayerTookItem1(playerX,playerY +2)
		end if
		if takenItem = 1 then
			if playerLives<99 then
				playerLives = playerLives + 1
			end if
		end if
		if takenItem = 2 then
			if playerShield<99 then
				playerShield = playerShield + 1
			end if
		end if
		if takenItem = 3 then
			if playerAmmo<99 then
				playerAmmo = playerAmmo + 1
			end if
		end if
		if takenItem = 4 then
			if playerGrenade<99 then
				playerGrenade = playerGrenade + 1
			end if
		end if
		if mapNumber = 16 and playerX = 17 and playerY = 15 then
			RedrawArea1(playerX,playerY)
			RedrawArea1(playerX,playerY+1)
			RedrawArea1(playerX+1,playerY)
			RedrawArea1(playerX+1,playerY+1)
			for playerY=0 to 17
				winScrollUp(0,15,2,17)
				beep 0.003, playerY
				if playerY>0 then
					Ship()
					ink 2
					print at 16-playerY,15; "\G\H"
					print at 17-playerY,15; "  "
				end if 
			next
			CLS
			print at 9,8; ink 4; "CONGRATULATIONS!"
			print at 11,2; ink 4; "YOU HAVE COMPLETED THE RAID!"
			Click():Click():Click()
			PlayMusic(0)
			pause 0
			Click()
			CLS: goto drawmenu
		end if 
		if takenItem = 99 then
			if gameDifficulty=1 or (gameDifficulty>1 and CountLiveAliens()=0) then
				mapNumber = mapNumber + 1
				DrawLevel(mapNumber)
				RespawnPlayer()
			else
				takenItem=0
			end if 
		end if
		dim llife as ubyte = 1
		if direction = directionRD or direction = directionLD then
			if PlayerSearch1(playerX,playerY + 1,llife) = 1 then
				playerLives = playerLives + llife
				if playerLives>99 then playerLives = 99				
			end if
		end if
		if takenItem>0 then RefreshUI(1)
	end if
end sub

sub RefreshUI(sound as ubyte)
	DrawUI1(playerLives, playerAmmo, playerGrenade, playerShield, playerFrags, mapNumber)
	if sound=1 then beep 0.005,0.01	
end sub

sub RefreshNPCs()
	for i = 0 to 5
        if npcLive(i) = 1 then
			DrawAlien(npcX(i),npcY(i),npcAction(i),npcLocation(i),npcFrame(i),i)
        end if
    next i
end sub

sub ShotSound()
	beep 0.0005,5
	beep 0.0006,3
	beep 0.0005,1
end sub

sub StepSound()
	'beep 0.0005,3
	beep 0.0003,1
end sub

sub StepSound2()
	beep 0.0003,2
	'beep 0.0003,1
end sub

dim spittingactive as ubyte = 0
dim spittingX as ubyte = 0
dim spittingY as ubyte = 0
dim spittingLeftShift as ubyte = 0
dim spittingframe as ubyte = 0
dim grenadeframe as ubyte = 0

sub AlienSpitting(x as ubyte, y as ubyte, leftshift as ubyte)
	AlienDies()	
	if spittingactive=0 then ShotSound(): spittingframe=0: spittingactive=1: spittingX=x: spittingY=y: spittingLeftShift=leftshift
	ink 4
	itemp=x
	dim canquit as ubyte=0
	dim y2 as ubyte=0
	:spitting
	if leftshift=1 then
		itemp=itemp-1
		if itemp>32 then itemp=0
		sprite1="\H"
	else
		itemp=itemp+1
		if itemp>31 then itemp=31
		sprite1="\G"
	end if 
	if playerX<>itemp then print at y,itemp; sprite1
	
	dim ch as ubyte=0
	if playerShield>1 and (playerY=y or playerY+1=y) then
		if playerDirection<>directionL and playerDirection<>directionR then 
			if playerX=itemp and playerShield>1 then
				ch=1
			end if 
		else
			if playerX=itemp or playerX-1=itemp or playerX+1=itemp  then
				ch=1
			end if 
		end if 
	end if 	
	if ch=1 then
		border 2
		playerShield=playerShield-1
		RefreshUI(0)
		border 0
		DrawPlayer(playerDirection,playerFrame,playerX,playerY,4)
		spittingactive=0
		RedrawArea1(itemp,y)
		return
	end if 
	
	if playerX=itemp and playerShield=1 and (playerY=y or playerY+1=y) then				
		playerShield=0
		HumanScream()
		LongWait()
		canquit=1
		spittingactive=0
		RedrawArea1(itemp,y)
		return
	end if 
	ch=map(y,itemp)
	if ch<>0 and ch<>4 and ch<>5 and ch<>6 and ch<>7 and ch<>8 and ch<>9 and ch<>18 and ch<>19 and (ch<63 or ch>69) and (ch<57 or ch>62) and (ch<69 or ch>72) and (ch<12 or ch>15) and ch<>17 and (ch<24 or ch>32) and (ch<52 or ch>66) then 
		canquit=1
	end if 
	if ch=10 then map(y,itemp)=10: canquit=1
	if itemp=0 or itemp=31 then canquit=1
		
	AlienDies()
	if canquit then 		
		ShotSound()
		RedrawArea1(itemp,y)
		RedrawArea1(itemp,y2)
		spittingactive=0
		return
	end if 
	spittingX=itemp
end sub 

sub CheckHitAlien(dir as ubyte)
	dim k as ubyte=0
	for i=0 to 5
		if npcLive(i)=1 and npcHP(i)>0 then
			if playerY=npcY(i) then
				if dir=directionL and npcX(i)<playerX then
					if CanHit(npcX(i),playerY,playerX)=1 then k=1
				end if 
				if dir=directionR and npcX(i)>playerX then
					if CanHit(playerX,playerY,npcX(i))=1 then k=1
				end if				
				if k=1 then 
					border 1
					npcHP(i)=npcHP(i)-1
					if npcHP(i) = 0 and achFB = 0 then achFB = 1
					AlienScream()
					border 0
					return
				end if 
			end if 
		end if 
	next
end sub

sub DrawGrenade()
	if GrenadeActive=0 then return
	if grenadeframe=0 and GrenadeActive=1  then 
		'ink 7
		plot GrenadeX, GrenadeY
		'plot GrenadeX+1, GrenadeY
		'plot GrenadeX, GrenadeY+1
		'plot GrenadeX+1, GrenadeY+1
	end if 
	dim x1 as ubyte
	dim y1 as ubyte
	dim ch as ubyte
	x1=GrenadeX/8
	y1=23-GrenadeY/8
	if grenadeframe=1 and GrenadeActive=1 then 		
		'print 0,0; str(23-GrenadeY/8)
		RedrawArea1(GrenadeX/8,23-GrenadeY/8)
		'print 21-GrenadeY/8
		if GrenadeX<256 and GrenadeY<192 and GrenadeActive=1 then 
			if GrenadeDirection=directionL then
				if GrenadeDistance<1 then
					GrenadeX=GrenadeX-4
					GrenadeY=GrenadeY+2
				end if 
				if GrenadeDistance>=1 and GrenadeDistance<=3 then
					GrenadeX=GrenadeX-4
				end if 
				if GrenadeDistance>3 then
					GrenadeX=GrenadeX-4
					GrenadeY=GrenadeY-2
				end if 
			else
				if GrenadeDistance<1 then
					GrenadeX=GrenadeX+4
					GrenadeY=GrenadeY+2
				end if 
				if GrenadeDistance>=1 and GrenadeDistance<=3 then
					GrenadeX=GrenadeX+4
				end if 
				if GrenadeDistance>3 then
					GrenadeX=GrenadeX+4
					GrenadeY=GrenadeY-2
				end if 
			end if 
			GrenadeDistance=GrenadeDistance+1
			ch=GetChar(x1,y1)
			if ch=11 or ch=10 or ch=1 then 
				'Explose
				if GrenadeDirection=directionR then
					GrenadeX=x1*8-8
				else
					GrenadeX=(x1+1)*8
				end if 
				if ch=1 then GrenadeY=(23-y1)*8+8
				x1=GrenadeX/8
				y1=23-(GrenadeY-2)/8
				GrenadeY=(23-y1)*8
				GrenadeActive=2
			end if 
		end if 		
	end if 
	if GrenadeActive>1 then
		Achievement()
		if GrenadeActive=2 or GrenadeActive=6 then ink 2: beep 0.0003,1': beep 0.0004,3
		if GrenadeActive=3 or GrenadeActive=5 then ink 6: beep 0.0003,5': beep 0.0004,2
		if GrenadeActive=4 then ink 7: beep 0.0003,3': beep 0.0004,1
		ch=GetChar(x1-1,y1-1)			
		if ch<>11 and ch<>1 and x1-1<32 then
			print at y1-1,x1-1; "\H"
			CheckAliensExploded(x1-1,y1-1)
		end if 
		ch=GetChar(x1-1,y1)			
		if ch<>11 and ch<>1 and x1-1<32 then 
			print at y1,x1-1; "\K"
			CheckAliensExploded(x1-1,y1)
			ch=GetChar(x1-1,y1+1)			
			if ch<>11 and ch<>1 then print at y1+1,x1-1; "\N": CheckAliensExploded(x1-1,y1+1)
		end if 
		ch=GetChar(x1,y1-1)			
		if ch<>11 and ch<>1 and x1<32 then 
			print at y1-1,x1; "\I"
			CheckAliensExploded(x1,y1-1)
		end if 
		ch=GetChar(x1,y1)			
		if ch<>11 and ch<>1 and x1<32 then 
			print at y1,x1; "\L"
			CheckAliensExploded(x1,y1)
			ch=GetChar(x1,y1+1)			
			if ch<>11 and ch<>1 then print at y1+1,x1; "\O": CheckAliensExploded(x1,y1+1)
		end if 
		ch=GetChar(x1+1,y1-1)			
		if ch<>11 and ch<>1 and x1+1<32 then 
			print at y1-1,x1+1; "\J"
			CheckAliensExploded(x1+1,y1-1)
		end if 
		ch=GetChar(x1+1,y1)			
		if ch<>11 and ch<>1 and x1+1<32 then 
			print at y1,x1+1; "\M"
			CheckAliensExploded(x1+1,y1)
			ch=GetChar(x1+1,y1+1)			
			if ch<>11 and ch<>1 then print at y1+1,x1+1; "\P": CheckAliensExploded(x1+1,y1+1)
		end if 
		
		GrenadeActive=GrenadeActive+1
		if GrenadeActive=7 then 
			GrenadeActive=0
			RedrawArea1(x1-2,y1-2): RedrawArea1(x1-1,y1-2): RedrawArea1(x1,y1-2): RedrawArea1(x1+1,y1-2): RedrawArea1(x1+2,y1-2)
			RedrawArea1(x1-2,y1-1): RedrawArea1(x1-1,y1-1): RedrawArea1(x1,y1-1): RedrawArea1(x1+1,y1-1): RedrawArea1(x1+2,y1-1)
			RedrawArea1(x1-2,y1): RedrawArea1(x1-1,y1): RedrawArea1(x1,y1): RedrawArea1(x1+1,y1): RedrawArea1(x1+2,y1)
			RedrawArea1(x1-2,y1+1): RedrawArea1(x1-1,y1+1): RedrawArea1(x1,y1+1): RedrawArea1(x1+1,y1+1): RedrawArea1(x1+2,y1+1)
			RedrawArea1(x1-2,y1+2): RedrawArea1(x1-1,y1+2): RedrawArea1(x1,y1+2): RedrawArea1(x1+1,y1+2): RedrawArea1(x1+2,y1+2)
		end if 
	end if 	
end sub 

sub CheckAliensExploded(x as ubyte, y as ubyte)
	dim i as ubyte
	for i=0 to 5
		if npcLive(i)=1 then
			if npcX(i)=x and npcY(i)=y then
				npcHP(i)=0
				npcLive(i)=0
				playerFrags=playerFrags+1
				AlienScream()
				RefreshUI(0)
				Achievement()
				if achBB=0 then achBB=1
			end if 
		end if 
	next 
	if (x=playerX and playerY) or (x=playerX and playerY+1) then playerShield=0
end sub 

'sub StepSound3()
'	beep 0.002, -50
'end sub

REM sub StepSound4()
	REM beep 0.002, -60
REM end sub

sub UpdateAlien(x as ubyte, y as ubyte, alienact as ubyte, alienloc as ubyte, alienfr as ubyte, alienindex as ubyte)
    npcX(alienindex)=x
    npcY(alienindex)=y
    npcAction(alienindex)=alienact
    npcLocation(alienindex)=alienloc
    npcFrame(alienindex)=alienfr
end sub 
